services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    env_file:
      - .env
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.authc.api_key.enabled=false
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - remedy-network
    command: >
      bash -c "
        bin/elasticsearch-plugin list | grep -q analysis-nori || bin/elasticsearch-plugin install analysis-nori;
        /usr/local/bin/docker-entrypoint.sh eswrapper
      "

  spring-boot:
    build: .
    container_name: spring-boot
    env_file:
      - .env
    depends_on:
      - mongodb
      - elasticsearch
      - postgresql
      - redis
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_URL=${POSTGRES_URL}

      - MINIO_URL=${MINIO_URL}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - DEFAULT_BUCKET=${DEFAULT_BUCKET}

      # MongoDB 설정
      - MONGO_DB_URI=${MONGO_DB_URI}

      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}

      - REDIS_URL=${REDIS_URL}

      # JWT 설정
      - JWT_ACCESS_TIME=${JWT_ACCESS_TIME}
      - JWT_REFRESH_TIME=${JWT_REFRESH_TIME}
      - JWT_PREFIX=${JWT_PREFIX}
      - JWT_HEADER=${JWT_HEADER}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}

      - HLS_DIRECTORY=${HLS_DIRECTORY}
      - HLS_SEGMENT_DURATION=${HLS_SEGMENT_DURATION}

    ports:
      - "8080:8080"
    volumes:
      - ./songs:/app/songs
    networks:
      - remedy-network

  mongodb:
    image: mongo:8.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    networks:
      - remedy-network

  postgresql:
    image: postgres:17
    container_name: postgresql
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - remedy-network

  redis:
    image: redis:7-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    networks:
      - remedy-network

networks:
  remedy-network:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local
  mongodb_data:
    driver: local
  postgresql_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local